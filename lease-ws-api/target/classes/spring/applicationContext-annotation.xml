<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        "
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop">
    <!-- configure the package for spring to scan -->
    <context:component-scan base-package="com.design.lease.**.service" />

    <context:component-scan base-package="com.design.lease.**.controller"/>

    <context:component-scan base-package="com.design.lease.constant.template"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

   <bean id="headAspect" class="com.design.lease.constant.aop.HeadAspect"/>
    <aop:aspectj-autoproxy/>
    <aop:config proxy-target-class="true"></aop:config>
    <!--&lt;!&ndash; 配置AOP面向切面&ndash;&gt;-->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 配置需要面向切面的类 &ndash;&gt;-->
        <!--<aop:aspect id="asp" ref="headAspect">-->

            <!--<aop:pointcut id="mycut" expression="execution(* com.design.lease.*.controller.*.*(..))"/>-->

            <!--<aop:before pointcut-ref="mycut" method="aroundProceed"/>-->

        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <bean id="wsBeanConfigBuilder" class="com.design.lease.constant.ws.builder.WsBeanConfigBuilder"/>

    <bean id="wsBeanInvokerBuilder" class="com.design.lease.constant.ws.builder.WsBeanInvokeBuilder"/>

    <bean id="wsHandlerAdapter" class="com.design.lease.constant.servlet.impl.WsHandlerAdapterImpl">
        <property name="wsBeanInvokeBuilder" ref="wsBeanInvokerBuilder"/>
    </bean>

    <bean id="wsDispatcherServlet" class="com.design.lease.constant.servlet.impl.WsDispatcherServletImpl"/>

</beans>